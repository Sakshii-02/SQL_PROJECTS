-- PROJECT: PIZZA SALES REPORT USING SQL

DROP TABLE IF EXISTS PIZZA_SALES;
CREATE TABLE PIZZA_SALES (
	pizza_id INT,
    order_id INT,
    pizza_name_id VARCHAR(20),
    quantity INT,
    order_date DATE,
    order_time TIME,
    unit_price DECIMAL(8,2),
    total_price DECIMAL(10,2),
    pizza_size VARCHAR(5),
    pizza_category VARCHAR(20),
    pizza_ingredients TEXT,
    pizza_name VARCHAR(100),
    PRIMARY KEY (pizza_id, order_id)
);

SELECT * FROM PIZZA_SALES;

--KPI's Requirements:
-- TOTAL REVENUE
SELECT SUM(TOTAL_PRICE) AS TOTAL_REV FROM PIZZA_SALES;

-- AVG ORDER VALUE
SELECT (SUM(TOTAL_PRICE)/COUNT(DISTINCT ORDER_ID)) AS AVG_ORDER_VAL FROM PIZZA_SALES;

-- TOTAL PIZZAS SOLD
SELECT SUM(QUANTITY) AS TOTAL_PIZZA_SOLD FROM PIZZA_SALES;

-- TOTAL ORDERS
SELECT COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS FROM PIZZA_SALES;

--AVG PIZZAS PER ORDER
SELECT CAST(CAST(SUM(QUANTITY)AS DECIMAL(10,2))/ COUNT(DISTINCT ORDER_ID)AS DECIMAL (10,2)) AS AVG_ORDER
FROM PIZZA_SALES;

-- DAILY TREND FOR TOTAL ORDERS
SELECT TO_CHAR(ORDER_DATE, 'Day') AS ORDER_DAY, COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS
FROM PIZZA_SALES GROUP BY TO_CHAR(ORDER_DATE, 'Day');

-- MOTNHLY TREND FOR TOTAL ORDERS
SELECT TO_CHAR(ORDER_DATE, 'Month') AS ORDER_DAY, COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS
FROM PIZZA_SALES GROUP BY TO_CHAR(ORDER_DATE, 'Month');

-- % OF SALES BY PIZZA CATEGORY
SELECT 
	PIZZA_CATEGORY, 
	CAST(SUM(TOTAL_PRICE) AS DECIMAL(10,2)) AS TOTAL_REV,
	CAST(SUM(TOTAL_PRICE)*100 / (SELECT SUM(TOTAL_PRICE) FROM PIZZA_SALES) AS DECIMAL(10,2)) AS PERCENTAGE
FROM PIZZA_SALES
GROUP BY PIZZA_CATEGORY;

-- % OF SALES BY PIZZA SIZE
SELECT 
	PIZZA_SIZE, 
	CAST(SUM(TOTAL_PRICE) AS DECIMAL(10,2)) AS TOTAL_REV,
	CAST(SUM(TOTAL_PRICE)*100 / (SELECT SUM(TOTAL_PRICE) FROM PIZZA_SALES) AS DECIMAL(10,2)) AS PERCENTAGE
FROM PIZZA_SALES
GROUP BY PIZZA_SIZE;

-- TOTAL PIZZAS SOLD BY PIZZA CATEGORY
SELECT 
	PIZZA_CATEGORY, 
	SUM(QUANTITY) AS TOTAL_QUANTITY
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 DESC;

-- TOP 5 PIZZAS BY REVENUE
SELECT 
	PIZZA_NAME,
	SUM(TOTAL_PRICE) AS REV_GENERATED
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- BOTTOM 5 PIZZAS BY REVENUE
SELECT 
	PIZZA_NAME,
	SUM(TOTAL_PRICE) AS REV_GENERATED
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 
LIMIT 5;

-- TOP 5 PIZZAS BY QUANTITY
SELECT 
	PIZZA_NAME,
	SUM(QUANTITY) AS TOTAL_Q
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- BOTTOM 5 PIZZAS BY QUANTITY
SELECT 
	PIZZA_NAME,
	SUM(QUANTITY) AS TOTAL_Q
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 
LIMIT 5;

-- TOP 5 PIZZAS BY TOTAL ORDERS
SELECT 
	PIZZA_NAME,
	(COUNT(DISTINCT ORDER_ID)) AS TOTAL_ORDER
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- BOTTOM 5 PIZZAS BY TOTAL ORDERS
SELECT 
	PIZZA_NAME,
	(COUNT(DISTINCT ORDER_ID)) AS TOTAL_ORDER
FROM PIZZA_SALES
GROUP BY 1
ORDER BY 2 
LIMIT 5;